{"version":3,"sources":["components/Searchbar/Searchbar.js","components/utils/PixabayFetch.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["Searchbar","onSearchFormSubmit","useState","search","setSearch","className","onSubmit","e","preventDefault","trim","alert","type","onChange","target","value","name","autocomplete","autofocus","placeholder","PixabayFetch","this","_searchQuery","page","url","searchQuery","axios","get","then","result","catch","err","console","log","ImageGalleryItem","images","map","webformatURL","id","tags","src","alt","ImageGallery","onModalOpen","onClick","Button","Modal","onModalCloseByEsc","onModalClose","onKeyDown","largeImg","useEffect","document","addEventListener","keyCode","Loader","newPixabayFetch","App","setPage","responseData","setResponseData","status","setStatus","modalIsOpen","setModalIsOpen","setLargeImg","window","scrollTo","top","documentElement","behavior","resetPage","searchPhotos","res","data","hits","length","p","finally","found","find","el","toString","largeImageURL","searchPage","prevState","scrollHeight","currentTarget","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c10ba917.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar({ onSearchFormSubmit }) {\n  const [search, setSearch] = useState('');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (search.trim() !== '') {\n      onSearchFormSubmit(search);\n      setSearch('');\n    } else alert('Add your search query');\n  };\n  const onChange = e => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={onChange}\n          name=\"searh\"\n          value={search}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autofocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import axios from 'axios';\n\nexport default class PixabayFetch {\n  constructor() {\n    this._searchQuery = '';\n    this.page = 1;\n  }\n\n  get searchQuery() {\n    return this._searchQuery;\n  }\n  set searchQuery(value) {\n    return (this._searchQuery = value);\n  }\n\n  get searchPage() {\n    return this.page;\n  }\n\n  set searchPage(value) {\n    return (this.page = value);\n  }\n\n  resetPage() {\n    return (this.page = 1);\n  }\n\n  searchPhotos() {\n    const base_url = 'https://pixabay.com/api/';\n    const api_key = '23081749-b9f3d38fc4718cbd45a8beed9';\n\n    const params = `?q=${this.searchQuery}&page=${this.page}&per_page=12&image_type=photo&orientation=horizontal&key=${api_key}`;\n    const url = base_url + params;\n\n    return axios\n      .get(url)\n      .then(result => {\n        return result;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n}\n\n// key 23081749-b9f3d38fc4718cbd45a8beed9\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ images }) {\n  return images.map(({ webformatURL, id, tags }) => {\n    return (\n      <li key={id} className=\"ImageGalleryItem\">\n        <img\n          id={id}\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n        />\n      </li>\n    );\n  });\n}\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ onModalOpen, images }) {\n  return (\n    <>\n      <ul onClick={onModalOpen} className=\"ImageGallery\">\n        <ImageGalleryItem images={images} />\n      </ul>\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  onModalOpen: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  const handleClick = () => {\n    return onClick(1);\n  };\n\n  return (\n    <button onClick={handleClick} className=\"Button\" type=\"button\">\n      Load More!\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({\n  onModalCloseByEsc,\n  onModalClose,\n  onKeyDown,\n  largeImg,\n}) {\n  useEffect(() => {\n    console.log('addEventListener');\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) {\n        onModalCloseByEsc();\n      }\n    });\n  });\n\n  return (\n    <div onClick={onModalClose} onKeyDown={onKeyDown} className=\"Overlay\">\n      <div className=\"Modal\">\n        <img className=\"LargeGalleryImage\" src={largeImg} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onModalClose: PropTypes.func,\n  onModalCloseByEsc: PropTypes.func,\n  largeImg: PropTypes.string,\n};\n","export default function Loader() {\n  return (\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport PixabayFetch from './components/utils/PixabayFetch';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from './components/Loader/Loader';\n\nimport './styles.css';\n\nconst newPixabayFetch = new PixabayFetch();\n\nexport default function App() {\n  const [search, setSearch] = useState('');\n  const [page, setPage] = useState(1);\n  const [responseData, setResponseData] = useState([]);\n  const [status, setStatus] = useState('init');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [largeImg, setLargeImg] = useState('');\n\n  useEffect(() => {\n    if (search === '') {\n      return;\n    }\n\n    window.scrollTo({\n      top: document.documentElement,\n      behavior: 'smooth',\n    });\n    newPixabayFetch.resetPage();\n    setStatus('pending');\n    setPage(1);\n\n    newPixabayFetch.searchQuery = search;\n    newPixabayFetch\n      .searchPhotos()\n      .then(res => {\n        if (res.data.hits.length !== 0) {\n          setResponseData([...res.data.hits]);\n        } else alert('Nothing to show! Change your search query');\n      })\n      .then(setPage(p => p + 1))\n      .finally(() => {\n        setStatus('success');\n      });\n  }, [search]);\n\n  const onSearchFormSubmit = search => {\n    setSearch(search);\n  };\n\n  const onClick = value => {\n    setStatus('pending');\n    setPage(page + 1);\n\n    newPixabayFetch.searchPage = page;\n    newPixabayFetch\n      .searchPhotos()\n      .then(res => {\n        setResponseData(prevState => [...prevState, ...res.data.hits]);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => {\n        setStatus('success');\n        window.scrollTo({\n          top: document.documentElement.scrollHeight - 1200,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  const onModalOpen = e => {\n    const found = responseData.find(el => el.id.toString() === e.target.id);\n\n    setModalIsOpen(!modalIsOpen);\n    setLargeImg(found.largeImageURL);\n  };\n\n  const onModalClose = e => {\n    if (\n      e.target.className === 'Overlay' &&\n      e.currentTarget.className === 'Overlay'\n    ) {\n      setModalIsOpen(!modalIsOpen);\n    }\n  };\n\n  const onModalCloseByEsc = () => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <>\n      <Searchbar onSearchFormSubmit={onSearchFormSubmit} />\n      <ImageGallery images={responseData} onModalOpen={onModalOpen} />\n      {status === 'pending' && <Loader />}\n      {responseData.length > 0 && <Button onClick={onClick} />}\n      {modalIsOpen && (\n        <Modal\n          onModalClose={onModalClose}\n          onModalCloseByEsc={onModalCloseByEsc}\n          largeImg={largeImg}\n        />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}